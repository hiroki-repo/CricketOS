#include "stdcall.as"
dim ptrforcx,3:bload "MEM:ORY",ptrforcx
sdim memory,65536
ret=syscall(116,varptr(memory))
#module
#deffunc mesc str prm_0,int prm_1
prm_0x=prm_0
for cntx,0,strlen(prm_0x),1
ret=syscall(2,peek(prm_0x,cntx))
next
if prm_1=0{ret=syscall(2,0x0D):ret=syscall(2,0x0A)}
return
#global
dehlforchk=0
mainlpjump=1
syscallprtptr=*syscallprt
#module
#deffunc z80memaccess int prm_0,int prm_1,int prm_2
switch prm_2
case 0
poke memory@,prm_0,prm_1
return
swbreak
case 1
return peek(memory@,prm_0)
swbreak
case 2
switch prm_0&0xFF
case 0
syscallid=prm_1
swbreak
case 1
poke dehlforchk@,0,prm_1
swbreak
case 2
poke dehlforchk@,1,prm_1
swbreak
case 3
poke dehlforchk@,2,prm_1
swbreak
case 4
poke dehlforchk@,3,prm_1
swbreak
swend
return
swbreak
case 3
switch prm_0&0xFF
case 0
ret=syscall(syscallid,wpeek(dehlforchk@,0),0,wpeek(dehlforchk@,2))
if hspstat&1{logmes@hsp "syscallptraddressesresult:"+strf("%08X",dehlforchk@)}
wpoke dehlforchk@,2,wpeek(scib@stdcall(3),0)
return ret
swbreak
case 1
return peek(dehlforchk@,0)
swbreak
case 2
return peek(dehlforchk@,1)
swbreak
case 3
return peek(dehlforchk@,2)
swbreak
case 4
return peek(dehlforchk@,3)
swbreak
swend
return 0xFF
swend
return 0
#global

//syscall(syscallid,[DE],[HL])
//syscallopt@stdcallinterface(3) [HL Result]
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
*mainlp
if crdelay=1{ret=syscall(2,0x0D):ret=syscall(2,0x0A):crdelay=0}
ret=syscall(2,syscall(25)+65)
ret=syscall(2,'>')
sdim cmdline,256
sdim cmdlinex,258:poke cmdlinex,0,255
ret=syscall(10,varptr(cmdlinex)):memcpy cmdline,cmdlinex,peek(cmdlinex,1),0,2:for cntx,0,strlen(cmdline),1:cmdnamecvmchk=peek(cmdline,cntx):if cmdnamecvmchk>='a' and cmdnamecvmchk<='z'{poke cmdline,cntx,cmdnamecvmchk-32}:next
dim dletter,256
sdim cmdname,128,512:if strmid(cmdline,1,1)=":" {if peek(cmdline,0)>='A' and peek(cmdline,0)<='Z' {drivebak=1:driveold=drive:drive=peek(cmdline,0)-'A':if drive>=16{drive=driveold}:ret=syscall(14,drive)}:cmdline=strmid(cmdline,2,strlen(cmdline))}:i=0:for cntx,0,strlen(cmdline),1:if peek(cmdline,cntx)=' '{i=i+1}else{if peek(cmdline,cntx)='='{i=i+1:equalcheck=1}else{cmdlinesliced="":poke cmdlinesliced,0,peek(cmdline,cntx):cmdname(i)=cmdname(i)+cmdlinesliced}}:next
repeat i+1:if strmid(cmdname(cnt),1,1)=":" and peek(cmdname(cnt),0)>='A' {dletter(cnt)=peek(cmdname(cnt),0)-'@'}:loop
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
switch cmdname(0)
case "DIR"
dirlistvar="":dirformat="":dirformat=cmdname(1):dirlistvarx=""
if strmid(dirformat,1,1)=":"{dirformat=strmid(dirformat,2,strlen(dirformat))}
if dirformat=""{dirformat="????????.???"}
//dirlist dirlistvar,dirformat,1
cnt2=0
/*notesel dirlistvar
ntmxpls=0:ntmxplsa=0
if (notemax-((notemax/4)*4))<=3 and (notemax\4)!=0{ntmxplsa=2:ntmxpls=1}
//if notemax<=3{ntmxplsa=1:ntmxpls=1}
for cntx,0,(notemax/4)+ntmxpls,1
/*driveletterstr="":poke driveletterstr,0,'A'+drive
mesc driveletterstr,1*/
/*ret=syscall(2,'A'+drive)
ntmxplsx=4
//if ntmxplsa=1{ntmxplsx=notemax}
if ntmxpls=1{if (notemax-(cntx*4))>3{ntmxplsx=4}else{ntmxplsx=notemax-((notemax/4)*4)}}
for cntx3,0,ntmxplsx,1:if syscall(11){dirbreakreq=1:_break}:storexint=-1:noteget dirlistvarx,cntx3+cnt2:for cntx2,0,strlen(dirlistvarx),1:if peek(dirlistvarx,cntx2)>='a' and peek(dirlistvarx,cntx2)<='z'{poke dirlistvarx,cntx2,peek(dirlistvarx,cntx2)-32}:next:dirlistvarx2="":storex="":for cntx2,0,strlen(dirlistvarx),1:if strmid(dirlistvarx,cntx2,1)="."{storexint=cntx2:_break}else{if cntx2<8{storex=storex+strmid(dirlistvarx,cntx2,1)}}:next:dirlistvarx2=strmid(storex,0,8):for cntx2,0,(8-strlen(dirlistvarx2)),1:dirlistvarx2=dirlistvarx2+" ":next:if storexint=-1{storex=""}else{storex=strmid(dirlistvarx,storexint+1,3)}:dirlistvarx2=dirlistvarx2+" "+storex:dirlistvarx2bak="":dirlistvarx2bak=dirlistvarx2:for cntx2,0,(12-strlen(dirlistvarx2bak)),1:dirlistvarx2=dirlistvarx2+" ":next:ret=syscall(2,':'):ret=syscall(2,' '):for cntxyz,0,strlen(dirlistvarx2),1:ret=syscall(2,peek(dirlistvarx2,cntxyz)):next:ret=syscall(2,' '):next:cnt2=cnt2+4
//mesc "\n",1
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
if dirbreakreq=1{_break}
next*/
sdim ptxptx,11
sdim fname12,256,2
fname12(0)=getpath(dirformat,8+1)
fname12(1)=getpath(dirformat,8+2)
fname12(1)=strmid(fname12(1),1,3)
poke ptxptx,0,0
memcpy ptxptx,fname12(0),8,0+1,0
memcpy ptxptx,fname12(1),3,0+1+8,0
repeat 11:if peek(ptxptx,0+1+cnt)=0{poke ptxptx,0+1+cnt,32}:loop
sdim ptxptx2,128
ret=syscall(26,varptr(ptxptx2))
statforfl=syscall(17,varptr(ptxptx))
if statforfl=-1{mesc "NO FILE",0}

repeat
if statforfl=-1{break}
if (cnt\4)=0{
if cnt!0{ret=syscall(2,0x0D):ret=syscall(2,0x0A)}
driveletterstr="":poke driveletterstr,0,'A'+drive
ret=syscall(2,peek(driveletterstr,0))
}
ret=syscall(2,':')
ret=syscall(2,' ')
repeat 8:ret=syscall(2,peek(ptxptx2,cnt+1)):loop
ret=syscall(2,' ')
repeat 3:ret=syscall(2,peek(ptxptx2,cnt+1+8)):loop
ret=syscall(2,' ')
ret=syscall(26,varptr(ptxptx2))
statforfl=syscall(18,varptr(ptxptx))
loop
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
swbreak
case "ERA"
dirlistvar="":dirformat="":dirformat=cmdname(1):dirlistvarx=""
if strmid(dirformat,1,1)=":"{dirformat=strmid(dirformat,2,strlen(dirformat))}
if dirformat=""{mesc "NO FILE"}else{
//exist dirformat
dirlistvar=""
dirlist dirlistvar,dirformat,1
stat2=stat
if stat2=0{mesc "NO FILE",1}else{
dirformatinstrsubst=-1:for cntx,0,strlen(dirformat),1:if peek(dirformat,cntx)='*'{dirformatinstrsubst=cntx:_break}:next
dirformatinstrsubst2=-1:for cntx,0,strlen(dirformat),1:if peek(dirformat,cntx)='?'{dirformatinstrsubst2=cntx:_break}:next
if dirformatinstrsubst=-1 and dirformatinstrsubst2=-1 {ucforrm="Y"}else{mesc "All (Y/N)?",1
sdim ucforrm,256
sdim ucforrmx,258:poke ucforrmx,0,1
ret=syscall(10,varptr(ucforrmx))
memcpy ucforrm,cmdlinex,peek(ucforrmx,1),0,2
}
if ucforrm="Y" or ucforrm="y"{
notesel dirlistvar
for cntx,0,stat2,1
noteget dirformat,cntx
delete dirformat
next
}
}}
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
swbreak
case "TYPE"
dirlistvar="":dirformat="":dirformat=cmdname(1):dirlistvarx=""
if strmid(dirformat,1,1)=":"{dirformat=strmid(dirformat,2,strlen(dirformat))}
if dirformat=""{mesc "?"}else{
exist dirformat
if strsize=-1{mesc dirformat+"?",1}else{
//notesel viewfile
exist dirformat
strsize2=strsize
sdim viewfile,strsize2
bload dirformat,viewfile
for cntx,0,strsize2,1
if syscall(11){_break}
viewfilesliced=""
lpoke viewfilesliced,0,peek(viewfile,cntx)
mesc viewfilesliced,1
next
}}
mesc "\n",1
swbreak
case "REN"
if equalcheck=1{
dirlistvar="":dirformat="":dirformat=cmdname(1):dirlistvarx=""
if strmid(dirformat,1,1)=":"{dirformat=strmid(dirformat,2,strlen(dirformat))}:dirformat1=""+dirformat:dirformat=cmdname(2)
if strmid(dirformat,1,1)=":"{dirformat=strmid(dirformat,2,strlen(dirformat))}:dirformat2=""+dirformat
if dirformat2=""{mesc "?"}else{
exist dirformat2
if strsize=-1{mesc "NO FILE",1}else{
bcopy dirformat2,dirformat1
delete dirformat2
}}}else{mesc "?"}
mesc "\n",1
swbreak
case "SAVE"
mesc "\n",1
swbreak
case "USER"
if cmdname(1)=""{mesc "?":mesc "\n",1}else{
userid=int(cmdname(1)) & 0xFF
if userid>=16{userid=15}
ret=syscall(32,userid)
}
mesc "\n",1
swbreak
case "EXIT"
ret=syscall(0)
swbreak
case ""
mesc "\n",1
swbreak
default
sdim fname12,256,2
fname12(0)=getpath(cmdname(1),8+1)
fname12(1)=getpath(cmdname(1),8+2)
fname12(1)=strmid(fname12(1),1,3)
poke memory,0x5c,dletter(1)
memcpy memory,fname12(0),8,0x5c+1,0
memcpy memory,fname12(1),3,0x5c+1+8,0
repeat 11:if peek(memory,0x5c+1+cnt)=0{poke memory,0x5c+1+cnt,32}:loop
sdim fname12,256,2
fname12(0)=getpath(cmdname(2),8+1)
fname12(1)=getpath(cmdname(2),8+2)
fname12(1)=strmid(fname12(1),1,3)
poke memory,0x6c,dletter(2)
memcpy memory,fname12(0),8,0x6c+1,0
memcpy memory,fname12(1),3,0x6c+1+8,0
repeat 11:if peek(memory,0x6c+1+cnt)=0{poke memory,0x6c+1+cnt,32}:loop
cmdexex="":cmdexex=strmid(cmdline,strlen(cmdname),strlen(cmdline))
memcpy memory,cmdexex,strlen(cmdexex),0x81,0
poke memory,0x80,strlen(cmdexex)
exist cmdname(0)+".COM"
if strsize!-1{
poke memory,0x0000,0xC3
wpoke memory,0x0001,0xFB00
poke memory,0x0005,0xC3
wpoke memory,0x0006,0xFE00
poke memory,0x0008,0xC3
wpoke memory,0x0009,0xFE40
poke memory,0x0010,0xC3
wpoke memory,0x0011,0xFE60
wpoke memory,0x003B,0xFEB0


poke memory,0xFB00,0x0E
poke memory,0xFB01,0x00
poke memory,0xFB02,0xC3
wpoke memory,0xFB03,0x0005
poke memory,0xFB05,0xC3
wpoke memory,0xFB06,0xFB05

poke memory,0xFC00,0x31
wpoke memory,0xFC01,0xFA00
poke memory,0xFC03,0xC3
wpoke memory,0xFC04,0x0100

poke memory,0xFE00,0x7B
poke memory,0xFE01,0xD3
poke memory,0xFE02,0x01
poke memory,0xFE03,0x7A
poke memory,0xFE04,0xD3
poke memory,0xFE05,0x02
poke memory,0xFE06,0x7D
poke memory,0xFE07,0xD3
poke memory,0xFE08,0x03
poke memory,0xFE09,0x7C
poke memory,0xFE0A,0xD3
poke memory,0xFE0B,0x04
poke memory,0xFE0C,0x79
poke memory,0xFE0D,0xD3
poke memory,0xFE0E,0x00
poke memory,0xFE0F,0xDB
poke memory,0xFE10,0x00
poke memory,0xFE11,0x32
wpoke memory,0xFE12,0xFE20
poke memory,0xFE14,0xDB
poke memory,0xFE15,0x03
poke memory,0xFE16,0x6F
poke memory,0xFE17,0xDB
poke memory,0xFE18,0x04
poke memory,0xFE19,0x67
poke memory,0xFE1A,0x3A
wpoke memory,0xFE1B,0xFE20
poke memory,0xFE1D,0xC9

poke memory,0xFE40,0x32
wpoke memory,0xFE41,0xFE20
poke memory,0xFE43,0xDB
poke memory,0xFE44,0x05
poke memory,0xFE45,0xDB
poke memory,0xFE46,0x03
poke memory,0xFE47,0x6F
poke memory,0xFE48,0xDB
poke memory,0xFE49,0x04
poke memory,0xFE4A,0x67
poke memory,0xFE4B,0x3A
wpoke memory,0xFE4C,0xFE20
poke memory,0xFE4E,0xC9

poke memory,0xFE60,0x32
wpoke memory,0xFE61,0xFE20
poke memory,0xFE63,0x79
poke memory,0xFE64,0xC6
poke memory,0xFE65,0x06
poke memory,0xFE66,0x4F
poke memory,0xFE67,0x78
poke memory,0xFE68,0xFE
poke memory,0xFE69,0x00
poke memory,0xFE6A,0xCA
wpoke memory,0xFE6B,0xFE73
poke memory,0xFE6D,0xED
poke memory,0xFE6E,0x68
poke memory,0xFE6F,0x3A
wpoke memory,0xFE70,0xFE20
poke memory,0xFE72,0xC9
poke memory,0xFE73,0xED
poke memory,0xFE74,0x69
poke memory,0xFE75,0x3A
wpoke memory,0xFE76,0xFE20
poke memory,0xFE78,0xC9
cpmaddress=0xFC00
ret=syscall(111,lpeek(syscallprtptr,0))
dupptr cpm80tpa,varptr(memory)+0x100,0xFF00,2
bload cmdname(0)+".COM",cpm80tpa
gosub *cpmrun
}else{
exist cmdname(0)+".AX"
if strsize!-1{
optforexec="":optforexec=cmdname(0)+".AX"
ldim trangent,1
lpoke trangent,0,syscall(120,varptr(optforexec))
cmdexex="":cmdexex=strmid(cmdline,strlen(cmdname),strlen(cmdline))
lpoke ptrforcx(2),0,varptr(cmdexex)
memfile ptrforcx
gosub trangent
}else{for cntx,0,strlen(cmdname(0)),1
ret=syscall(2,peek(cmdname(0),cntx))
next
ret=syscall(2,'?')}
}
ret=syscall(2,0x0D):ret=syscall(2,0x0A)
swbreak
swend
goto *mainlp

*syscallprt
dim paramate,3
bload "MEM:ORY",paramate
z80memaccess paramate(0),paramate(1),paramate(2)
statue=stat
return statue

*cpmrun
ret=syscall(113,65536,0,varptr(cpmaddress))
goto *cpmrun